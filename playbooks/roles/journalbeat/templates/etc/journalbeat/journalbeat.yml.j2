###################### Journalbeat Configuration Example #########################

# This file is an example configuration file highlighting only the most common
# options. The journalbeat.reference.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/journalbeat/index.html

# For more available modules and options, please see the journalbeat.reference.yml sample
# configuration file.

#=========================== Journalbeat inputs =============================

journalbeat.inputs:
    # Paths that should be crawled and fetched. Possible values files and directories.
    # When setting a directory, all journals under it are merged.
    # When empty starts to read from local journal.
  - paths: {{ journalbeat_intput_paths }}

    # The number of seconds to wait before trying to read again from journals.
    #backoff: 1s
    # The maximum number of seconds to wait before attempting to read again from journals.
    #max_backoff: 20s

    # Position to start reading from journal. Valid values: head, tail, cursor
    seek: cursor
    # Fallback position if no cursor data is available.
    #cursor_seek_fallback: head

    # Exact matching for field values of events.
    # Matching for nginx entries: "systemd.unit=nginx"
    {% if "[]" not in journalbeat_input_includes -%}
    include_matches:
      {% for input in journalbeat_input_includes -%}
      - "{{ input }}"
      {% endfor %}
    {% else -%}
    include_matches: []
    {% endif %}

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
name: {{ ansible_hostname }}

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
fields:
  groups: [{% for group in journalbeat_all_groups %}"{{ group }}"{% if not loop.last %},{% endif %}{% endfor %}]

queue:
  mem:
    # Max number of events the queue can buffer.
    events: {{ journalbeat_queue_mem_events }}
    flush.min_events: 2048
    flush.timeout: 1s


#================================ Outputs =====================================

#----------------------------- Logstash output --------------------------------
output.logstash:
  # Boolean flag to enable or disable the output module.
  enabled: {{ journalbeat_logstash_output_enabled }}

  # The Logstash hosts
  hosts: [{% for host in journalbeat_logstash_targets %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}]

  # Loadbalance output to all hosts
  loadbalance: true

  # Optional maximum time to live for a connection to Logstash, after which the
  # connection will be re-established.  A value of `0s` (the default) will
  # disable this feature.
  #
  # Not yet supported for async connections (i.e. with the "pipelining" option set)
  ttl: 10s

  # Number of batches to be sent asynchronously to Logstash while processing
  # new batches.
  # Needs to be disabled for ttl to work
  pipelining: 0

  # If enabled only a subset of events in a batch of events is transferred per
  # transaction.  The number of events to be sent increases up to `bulk_max_size`
  # if no error is encountered.
  slow_start: true

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

#----------------------------- Console output ---------------------------------
# Use for debugging! Remember to disable other outputs before using this!
#output.console:
  # Boolean flag to enable or disable the output module.
  #enabled: true

  # Configure JSON encoding
  #codec.json:
    # Pretty-print JSON event
    #pretty: false

    # Configure escaping HTML symbols in strings.
    #escape_html: false


#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.

processors:
  - add_host_metadata: ~

# TODO(jocke) Go through metadata processors for different clouds/kubernetes/
#  - add_cloud_metadata: ~

#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#TODO:(jocke) Right now INFO logging causes journalbeat to read its own "i did just completed sending one log" logs
# causing an endless loop of messages, this will probably be fixed soon though https://github.com/elastic/beats/issues/11179
logging.level: warning

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
logging.selectors: ["*"]

# Disable spammy metrics logging
logging.metrics.enabled: false

# Logging to rotating files. Set logging.to_files to false to disable logging to
# files.
logging.to_files: true
logging.files:
  # Configure the path where the logs are written. The default is the logs directory
  # under the home path (the binary location).
  path: /var/log/journalbeat

  # The name of the files where the logs are written to.
  name: journalbeat

  # Configure log file size limit. If limit is reached, log file will be
  # automatically rotated
  rotateeverybytes: 10485760 # = 10MB

  # Number of rotated log files to keep. Oldest files will be deleted first.
  keepfiles: 7

  # The permissions mask to apply when rotating log files. The default value is 0600.
  # Must be a valid Unix-style file permissions mask expressed in octal notation.
  #permissions: 0600

  # Enable log file rotation on time intervals in addition to size-based rotation.
  # Intervals must be at least 1s. Values of 1m, 1h, 24h, 7*24h, 30*24h, and 365*24h
  # are boundary-aligned with minutes, hours, days, weeks, months, and years as
  # reported by the local system clock. All other intervals are calculated from the
  # Unix epoch. Defaults to disabled.
  interval: 24h
